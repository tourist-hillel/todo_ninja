name: Pipelines for todo app
on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Chechkout code
              uses: actions/checkout@v4

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                python-version: '3.12'
            - name: Install dependencies
              run: |
                 python -m pip install --upgrade pip
                 pip install flake8
            - name: Run flake8
              run: flake8 todo_ninja/ws_chat --exclude=migrations --max-line-length=120

    test:
        runs-on: ubuntu-latest
        services:
            redis:
                image: redis:latest
                ports:
                    - 6379:6379
        steps:
            - name: Chechkout code
              uses: actions/checkout@v4

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                python-version: '3.12'
            - name: Check requirements.txt
              run: |
                test -f requirements.txt || (echo "requirements.txt not found" && exit 1)
            - name: Install dependencies
              run: |
                 python -m pip install --upgrade pip
                 pip install -r requirements.txt
            - name: Run migrations
              run: python todo_ninja/manage.py migrate
              env:
                DJANGO_SETTINGS_MODULE: todo_ninja.settings

            - name: Run tests
              run: python todo_ninja/manage.py test lib_drf
              env:
                DJANGO_SETTINGS_MODULE: todo_ninja.settings
                REDIS_HOST: redis
    security:
        runs-on: ubuntu-latest
        steps:
            - name: Chechkout code
              uses: actions/checkout@v4

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                python-version: '3.12'
            
            - name: Install Bandit
              run: |
                python -m pip install --upgrade pip
                pip install bandit
            - name: Run security test
              run: bandit -r todo_ninja/lib_drf/ todo_ninja/users_app/ -f txt -o security_report.txt || true
            
            - name: Upload security report
              uses: actions/upload-artifact@v4
              with:
                name: security-report
                path: security_report.txt
                retention-days: 7
 
