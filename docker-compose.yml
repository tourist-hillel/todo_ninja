version: '3.8'

services:
  web1:
    build: .
    command: sh -c "python manage.py makemigrations && python manage.py migrate && uvicorn todo_ninja.asgi:application  --host 0.0.0.0 --port 8000"
    volumes:
      - ./todo_ninja:/app
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULTS_BACKEND=redis://redis:6379/0
    restart: always

  web2:
    build: .
    command: sh -c "python manage.py makemigrations && python manage.py migrate && uvicorn todo_ninja.asgi:application  --host 0.0.0.0 --port 8001"
    volumes:
      - ./todo_ninja:/app
    expose:
      - "8001"
    depends_on:
      - db
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULTS_BACKEND=redis://redis:6379/0
    restart: always
  
  db:
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_DB=second_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
  
  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"

  celery-worker:
    build: .
    command: celery -A todo_ninja worker -l info
    volumes:
      - ./todo_ninja:/app
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULTS_BACKEND=redis://redis:6379/0
    restart: always

  celery-beat:
    build: .
    command: celery -A todo_ninja beat -l info
    volumes:
      - ./todo_ninja:/app
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULTS_BACKEND=redis://redis:6379/0
    restart: always

  minio:
    image: minio/minio
    container_name: minio_todo
    restart: always
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - ./data:/data
    command: server /data

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./todo_ninja/nginx.conf:/etc/nginx/nginx.conf
      - ./todo_ninja/certs:/etc/nginx/certs
      - ./todo_ninja/static:/code/static
    depends_on:
      - web1
      - web2

  openssl:
    image: alpine/openssl
    volumes:
      - ./todo_ninja/certs:/certs
    command: >
      req -x509 -nodes -newkey rsa:4096 -keyout /certs/nginx.key
      -out /certs/nginx.crt -days 365
      -subj "/C=UA/ST=State/L=Kharkiv/O=Hillel/OU=Lecture/CN=localhost"
